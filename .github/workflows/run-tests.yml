name: Android UI Tests with Allure

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.19.0

      - name: Install Appium
        run: |
          npm install -g appium@3.0.2
          appium driver install uiautomator2

      - name: Check APK
        run: |
          APK_PATH="$GITHUB_WORKSPACE/app/General-Store.apk"
          if [ ! -f "$APK_PATH" ]; then echo "‚ùå APK not found at $APK_PATH"; exit 1; fi
          echo "‚úÖ APK found at $APK_PATH"
          echo "Verifying APK format..."
          file "$APK_PATH"
          unzip -t "$APK_PATH" || (echo "‚ùå APK is corrupted"; exit 1)

      - name: Start Android emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86
          profile: pixel_4
          disable-animations: true
          ram-size: 2048M
          heap-size: 512M
          emulator-options: -no-window -gpu swiftshader -no-snapshot -noaudio -no-boot-anim -accel off -no-metrics
          script: |
            set -e
            export CI=true
            echo "üïì Booting emulator..."; timeout=600; counter=0; while [ "$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d "\r")" != "1" ]; do [ $counter -ge $timeout ] && echo "‚ùå Timeout waiting for emulator to boot" && exit 1; echo "Waiting for emulator to boot... ($counter/$timeout)"; sleep 5; counter=$((counter + 5)); done;
            echo "‚úÖ Emulator boot completed"

            echo "üîß Disabling animations..."
            adb shell settings put global window_animation_scale 0
            adb shell settings put global transition_animation_scale 0
            adb shell settings put global animator_duration_scale 0

            echo "üì± Unlocking screen..."
            adb shell input keyevent 82
            adb devices

            echo "Cleaning Appium cache and temp folders..."
            rm -rf /tmp/appium* || true
            rm -rf ~/.cache/appium || true
            rm -rf $GITHUB_WORKSPACE/appium_logs || true

            echo "üì∏ Starting Appium server..."
            appium --base-path /wd/hub --log-level info > appium.log 2>&1 &
            APPIUM_PID=$!

            echo "üåê Launching app..."
            adb install -r "$GITHUB_WORKSPACE/app/General-Store.apk"
            adb shell am start -n com.android.generalstore/.SplashActivity
            echo "‚úÖ App launched"

            echo "Waiting for Appium to start..."; for i in $(seq 1 30); do curl -s http://localhost:4723/wd/hub/status > /dev/null && echo "‚úÖ Appium server is ready!" && break; echo "Waiting for Appium... attempt $i/30"; sleep 2; done;

            echo "üîé Checking current resumed activity..."; i=1; while [ $i -le 15 ]; do activity=$(adb shell dumpsys activity activities | grep "ResumedActivity" || true); [ -n "$activity" ] && echo "üéØ Active: $activity" && break; echo "‚è≥ Waiting for resumed activity... attempt $i/15"; sleep 4; i=$((i + 1)); done;

            echo "üß™ Running Maven tests..."
            adb shell dumpsys activity activities | grep "ResumedActivity"
            mvn -B clean test -Dsurefire.useFile=false -Dallure.results.directory=target/allure-results || TEST_EXIT_CODE=$?

            echo "üßπ Stopping Appium..."; [ -n "$APPIUM_PID" ] && kill $APPIUM_PID 2>/dev/null || true; [ -f appium.log ] && echo "üìã Appium logs (last 50 lines):" && tail -50 appium.log; if [ -d "target/allure-results" ]; then echo "‚úÖ Test results found in target/allure-results"; ls -la target/allure-results/; else echo "‚ö†Ô∏è No test results found in target/allure-results"; mkdir -p target/allure-results; echo '{}' > target/allure-results/dummy.json; fi; exit ${TEST_EXIT_CODE:-0};

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: target/screenshots/

      - name: Generate Allure report
        if: always()
        run: |
          if [ -d "target/allure-results" ] && [ "$(ls -A target/allure-results)" ]; then
            echo "üìä Generating Allure report..."
            rm -rf target/site/allure-maven-plugin || true
            mvn -B allure:report
          else
            echo "‚ö†Ô∏è No test results to generate report from"
            mkdir -p target/site/allure-maven-plugin
            echo "<html><body><h1>No test results available</h1></body></html>" > target/site/allure-maven-plugin/index.html
          fi

      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/site/allure-maven-plugin/
          if-no-files-found: warn

      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            appium.log
            target/surefire-reports/
          if-no-files-found: ignore










