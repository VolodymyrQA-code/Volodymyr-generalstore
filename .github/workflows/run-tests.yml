name: Android UI Tests with Allure

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      ANDROID_SDK_ROOT: ${{ runner.home }}/Android/Sdk
      PATH: ${{ runner.home }}/Android/Sdk/platform-tools:${{ runner.home }}/Android/Sdk/cmdline-tools/latest/bin:${{ env.PATH }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.19.0

      - name: Install Appium
        run: |
          npm install -g appium@3.0.2
          appium driver install uiautomator2

      - name: Install Android SDK + platform-tools + apkanalyzer
        run: |
          sudo apt-get update && sudo apt-get install -y unzip wget
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          mkdir -p latest
          mv cmdline-tools/* latest/
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "build-tools;33.0.2"
          echo "‚úÖ Android SDK, platform-tools and apkanalyzer ready"

      - name: Check APK
        run: |
          APK_PATH="$GITHUB_WORKSPACE/app/General-Store.apk"
          [ -f "$APK_PATH" ] || { echo "‚ùå APK not found at $APK_PATH"; exit 1; }
          echo "üì¶ Checking APK format..."
          file "$APK_PATH"
          unzip -t "$APK_PATH" || { echo "‚ùå APK is corrupted"; exit 1; }
          echo "üîç Checking activities in APK..."
          apkanalyzer manifest activities "$APK_PATH"

      - name: Start emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          target: default
          arch: x86
          profile: pixel
          disable-animations: false
          emulator-options: -gpu swiftshader_indirect
          script: |
            set -e; export CI=true; echo "üïì Booting emulator..."; timeout=400; counter=0; while [ "$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d "\r")" != "1" ]; do [ $counter -ge $timeout ] && echo "‚ùå Timeout waiting for emulator" && exit 1; echo "Waiting emulator... ($counter/$timeout)"; sleep 5; counter=$((counter + 5)); done; adb shell settings put global window_animation_scale 0.0; adb shell settings put global transition_animation_scale 0.0; adb shell settings put global animator_duration_scale 0.0; adb shell input keyevent 82; echo "‚úÖ Emulator ready!"; adb devices; echo "üì∏ Taking screenshot & page source after boot..."; mkdir -p $GITHUB_WORKSPACE/target/screenshots; adb exec-out screencap -p > $GITHUB_WORKSPACE/target/screenshots/boot_screen.png; adb shell uiautomator dump /sdcard/boot_page.xml; adb pull /sdcard/boot_page.xml $GITHUB_WORKSPACE/target/screenshots/boot_page.xml; echo "üåê Launching app..."; adb install -r "$GITHUB_WORKSPACE/app/General-Store.apk"; adb shell am start -n com.android.generalstore/.SplashActivity; echo "‚úÖ App launched"; echo "‚è≥ Waiting app to stabilize (20s)"; sleep 20; echo "üì∏ Screenshot & page source before Appium..."; adb exec-out screencap -p > $GITHUB_WORKSPACE/target/screenshots/pre_appium.png; adb shell uiautomator dump /sdcard/pre_appium_page.xml; adb pull /sdcard/pre_appium_page.xml $GITHUB_WORKSPACE/target/screenshots/pre_appium_page.xml; echo "Cleaning Appium cache..."; rm -rf /tmp/appium* ~/.cache/appium $GITHUB_WORKSPACE/appium_logs || true; echo "üì∏ Starting Appium server..."; appium --base-path /wd/hub --log-level info > appium.log 2>&1 & APPIUM_PID=$!; echo "Waiting Appium..."; for i in $(seq 1 30); do curl -s http://localhost:4723/wd/hub/status > /dev/null && echo "‚úÖ Appium ready!" && break; echo "Waiting Appium $i/30"; sleep 2; done; echo "üîé Checking resumed activity..."; i=1; while [ $i -le 20 ]; do activity=$(adb shell dumpsys activity activities | grep "ResumedActivity" || true); [ -n "$activity" ] && echo "üéØ Active: $activity" && break; echo "‚è≥ Waiting resumed activity $i/20"; sleep 4; i=$((i + 1)); done; echo "üß™ Running Maven tests..."; adb shell dumpsys activity activities | grep "ResumedActivity"; mvn -B clean test -Dsurefire.useFile=false -Dallure.results.directory=target/allure-results || TEST_EXIT_CODE=$?; echo "üßπ Stopping Appium..."; [ -n "$APPIUM_PID" ] && kill $APPIUM_PID 2>/dev/null || true; [ -f appium.log ] && echo "üìã Appium logs (last 50 lines):" && tail -50 appium.log; [ -d "target/allure-results" ] && echo "‚úÖ Test results found" && ls -la target/allure-results/ || { echo "‚ö†Ô∏è No results, creating dummy"; mkdir -p target/allure-results; echo '{}' > target/allure-results/dummy.json; }; exit ${TEST_EXIT_CODE:-0}

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: target/screenshots/

      - name: Generate Allure report
        if: always()
        run: |
          [ -d "target/allure-results" ] && [ "$(ls -A target/allure-results)" ] && { echo "üìä Generating Allure report..."; rm -rf target/site/allure-maven-plugin || true; mvn -B allure:report; } || { echo "‚ö†Ô∏è No test results"; mkdir -p target/site/allure-maven-plugin; echo "<html><body><h1>No test results available</h1></body></html>" > target/site/allure-maven-plugin/index.html; }

      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/site/allure-maven-plugin/
          if-no-files-found: warn

      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            appium.log
            target/surefire-reports/
          if-no-files-found: ignore
