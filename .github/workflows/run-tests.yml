name: Android UI Tests with Allure

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 💾 Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: 📦 Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.19.0

      - name: 🤖 Install Appium
        run: |
          npm install -g appium@3.0.2
          appium driver install uiautomator2

      - name: 📱 Check APK
        run: |
          APK_PATH="$GITHUB_WORKSPACE/app/General-Store.apk"
          if [ ! -f "$APK_PATH" ]; then echo "❌ APK not found at $APK_PATH"; exit 1; fi
          echo "✅ APK found at $APK_PATH"
          echo "Verifying APK format..."
          file "$APK_PATH"
          unzip -t "$APK_PATH" || (echo "❌ APK is corrupted"; exit 1)

      - name: 🧰 Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          target: default
          arch: x86
          build-tools: 35.0.0

      - name: 🚀 Start Android emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64

          profile: pixel
          disable-animations: true
          emulator-options: -memory 1536 -no-snapshot -no-boot-anim -gpu swiftshader_indirect
          script: |
            set -e
            export CI=true
            echo "🕓 Booting emulator..."
            timeout=400; counter=0
            while ! adb devices | grep -q emulator-5554; do
              [ $counter -ge $timeout ] && echo "❌ Emulator not found" && exit 1
              echo "Waiting for emulator ($counter/$timeout)"
              sleep 5
              counter=$((counter + 5))
            done
            echo "✅ Emulator connected"
            while [ "$(adb -s emulator-5554 shell getprop sys.boot_completed 2>/dev/null | tr -d "\r")" != "1" ]; do sleep 5; done
            adb shell input keyevent 82
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
            echo "✅ Emulator ready!"
            adb devices
            echo "🧹 Cleaning Appium cache..."
            rm -rf /tmp/appium* ~/.cache/appium $GITHUB_WORKSPACE/appium_logs || true
            echo "📸 Starting Appium server..."
            appium --base-path /wd/hub --log-level info > appium.log 2>&1 &
            APPIUM_PID=$!
            echo "🌐 Installing and launching app..."
            adb install -r "$GITHUB_WORKSPACE/app/General-Store.apk"
            adb shell am start -n com.android.generalstore/.SplashActivity
            echo "✅ App launched"
            echo "⌛ Waiting for Appium to start..."
            for i in $(seq 1 30); do
              curl -s http://localhost:4723/wd/hub/status > /dev/null && echo "✅ Appium ready!" && break
              echo "Waiting Appium... attempt $i/30"
              sleep 2
            done
            echo "🔎 Checking resumed activity..."
            i=1
            while [ $i -le 15 ]; do
              activity=$(adb shell dumpsys activity activities | grep "ResumedActivity" || true)
              [ -n "$activity" ] && echo "🎯 Active: $activity" && break
              echo "⏳ Waiting resumed activity ($i/15)"
              sleep 4
              i=$((i + 1))
            done
            echo "🧪 Running Maven tests..."
            mvn -B clean test -Dsurefire.useFile=false -Dallure.results.directory=target/allure-results || TEST_EXIT_CODE=$?
            echo "🧹 Stopping Appium..."
            [ -n "$APPIUM_PID" ] && kill $APPIUM_PID 2>/dev/null || true
            [ -f appium.log ] && echo "📋 Appium logs (last 50 lines):" && tail -50 appium.log
            if [ -d "target/allure-results" ]; then
              echo "✅ Test results found"; ls -la target/allure-results/
            else
              echo "⚠️ No allure results found"; mkdir -p target/allure-results; echo '{}' > target/allure-results/dummy.json
            fi
            exit ${TEST_EXIT_CODE:-0}

      - name: 🧹 Terminate emulator (ignore errors)
        run: adb -s emulator-5554 emu kill || true
        continue-on-error: true

      - name: 📸 Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: target/screenshots/

      - name: 📊 Generate Allure report
        if: always()
        run: |
          if [ -d "target/allure-results" ] && [ "$(ls -A target/allure-results)" ]; then
            echo "📈 Generating Allure report..."
            mvn -B allure:report
          else
            echo "⚠️ No test results found for Allure"
            mkdir -p target/site/allure-maven-plugin
            echo "<html><body><h1>No test results available</h1></body></html>" > target/site/allure-maven-plugin/index.html
          fi

      - name: 📦 Upload Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/site/allure-maven-plugin/
          if-no-files-found: warn

      - name: 📜 Upload test logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            appium.log
            target/surefire-reports/
          if-no-files-found: ignore
